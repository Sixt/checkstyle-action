<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
          "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="com.puppycrawl.tools.checkstyle.Checker">
<module name="SuppressionFilter">
 <property name="file" value="${config_loc}/checkstyle-suppressions.xml"/>
</module>
<!--<module name="io.spring.javaformat.checkstyle.SpringChecks" /> -->
<module name="com.puppycrawl.tools.checkstyle.TreeWalker">
 <!-- <module name="io.spring.javaformat.checkstyle.check.SpringJUnit5Check" /> -->
 <module
   name="com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck">
   <property name="regexp" value="true" />
   <property name="illegalPkgs"
     value="^sun.*, ^org\.apache\.commons\.(?!compress|dbcp2|logging|pool2).*, ^com\.datastax\.oss\.driver\.shaded.*, ^com\.google\.common.*, ^io\.micrometer\.shaded.*,
      ^org\.jetbrains\.annotations.*, ^org\.testcontainers\.shaded.*" />
   <property name="illegalClasses"
     value="^com\.hazelcast\.util\.Base64, ^org\.junit\.rules\.ExpectedException"/>
 </module>
 <module
   name="com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck">
   <property name="id" value="mainCodeIllegalImportCheck"/>
   <property name="regexp" value="true" />
 </module>
 <module
   name="com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck">
   <property name="file"
     value="${config_loc}/import-control.xml" />
   <property name="path" value="^.*[\\/]src[\\/]main[\\/].*$" />
 </module>
 <module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
   <property name="maximum" value="0"/>
   <property name="format" value="org\.junit\.Assert\.assert" />
   <property name="message"
     value="Please use AssertJ imports." />
   <property name="ignoreComments" value="true" />
 </module>
 <module
   name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
   <property name="maximum" value="0" />
   <property name="format"
     value="assertThatExceptionOfType\((NullPointerException|IllegalArgumentException|IOException|IllegalStateException)\.class\)" />
   <property name="message"
     value="Please use specialized AssertJ assertThat*Exception method." />
   <property name="ignoreComments" value="true" />
 </module>
 <module name="NPathComplexity">
  <property name="max" value="200"/>
</module>
<module name="UnusedImports"/>
<module name="UnusedLocalVariable"/>
<module name="MethodLength">
  <property name="tokens" value="METHOD_DEF"/>
  <property name="max" value="100"/>
  <property name="countEmpty" value="false"/>
</module>
<module name="ParameterNumber">
  <property name="max" value="5"/>
  <property name="tokens" value="CTOR_DEF,METHOD_DEF"/>
</module>
<module name="LocalVariableName">
  <property name="format" value="^[a-z](_?[a-zA-Z0-9]+)*$"/>
</module>
<module name="InnerAssignment"/>
<module name="ClassFanOutComplexity"/>
 <!--<module name="io.spring.javaformat.checkstyle.check.SpringJavadocCheck">
   <property name="publicOnlySinceTags" value="true" />
   <property name="requireSinceTag" value="true" />
 </module> -->
</module>
</module>
